<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BoxCore</title>
  <subtitle>Start</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://boxcore.github.io/"/>
  <updated>2018-04-06T16:24:51.000Z</updated>
  <id>http://boxcore.github.io/</id>
  
  <author>
    <name>Zack Hwang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Nginx下重写规则</title>
    <link href="http://boxcore.github.io/2018/04/07/nginx-rewrite-rule.html"/>
    <id>http://boxcore.github.io/2018/04/07/nginx-rewrite-rule.html</id>
    <published>2018-04-06T16:14:58.000Z</published>
    <updated>2018-04-06T16:24:51.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;我们知道apache和nginx都可以对url链接进行重写，apache主要通过&lt;code&gt;.htacess&lt;/code&gt;文件来实现，而nginx主要是通过域名配置来实现。两者的用法区别很大，这里针对这2种链接重新工具进行对比，并给大家介绍nginx常用的一些rewrite
    
    </summary>
    
      <category term="正则" scheme="http://boxcore.github.io/categories/%E6%AD%A3%E5%88%99/"/>
    
      <category term="nginx" scheme="http://boxcore.github.io/categories/%E6%AD%A3%E5%88%99/nginx/"/>
    
    
      <category term="Nginx" scheme="http://boxcore.github.io/tags/Nginx/"/>
    
      <category term="rewrite" scheme="http://boxcore.github.io/tags/rewrite/"/>
    
      <category term="重写" scheme="http://boxcore.github.io/tags/%E9%87%8D%E5%86%99/"/>
    
  </entry>
  
  <entry>
    <title>代理模式</title>
    <link href="http://boxcore.github.io/2018/04/04/php/php-design-patterns-proxy.html"/>
    <id>http://boxcore.github.io/2018/04/04/php/php-design-patterns-proxy.html</id>
    <published>2018-04-03T17:04:42.000Z</published>
    <updated>2018-04-03T17:04:54.467Z</updated>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;在客户端与实体之间建立一个代理对象（proxy），客户端对实体进行的操作全部委派给代理对象，隐藏实体的具体实现细节。&lt;/li&gt;
&lt;li&gt;Proxy还可以与业务代码分离，部署到另外的服务器，业务代码中通过RPC来委派任务。&lt;/li&gt;
&lt;/ol&gt;

    
    </summary>
    
      <category term="php" scheme="http://boxcore.github.io/categories/php/"/>
    
    
      <category term="php" scheme="http://boxcore.github.io/tags/php/"/>
    
      <category term="设计模式" scheme="http://boxcore.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>原型模式</title>
    <link href="http://boxcore.github.io/2018/04/04/php/php-design-patterns-prototype.html"/>
    <id>http://boxcore.github.io/2018/04/04/php/php-design-patterns-prototype.html</id>
    <published>2018-04-03T17:00:03.000Z</published>
    <updated>2018-04-03T17:02:09.208Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;原型模式&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;与工厂模式作用类似，都是用来创建对象&lt;/li&gt;
&lt;li&gt;与工厂模式的实现不懂，原型模式是首先创建好一个原型对象，然后通过clone原型对象来创建新的对象。这样就免去了类创建是重复的初始化操作&lt;/li&gt;
&lt;li&gt;原型模式适用于大对象的创建。
    
    </summary>
    
      <category term="php" scheme="http://boxcore.github.io/categories/php/"/>
    
    
      <category term="php" scheme="http://boxcore.github.io/tags/php/"/>
    
      <category term="设计模式" scheme="http://boxcore.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>观察者模式</title>
    <link href="http://boxcore.github.io/2018/04/04/php/php-design-patterns-observer.html"/>
    <id>http://boxcore.github.io/2018/04/04/php/php-design-patterns-observer.html</id>
    <published>2018-04-03T16:51:22.000Z</published>
    <updated>2018-04-03T16:59:56.141Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="php" scheme="http://boxcore.github.io/categories/php/"/>
    
    
      <category term="php" scheme="http://boxcore.github.io/tags/php/"/>
    
      <category term="设计模式" scheme="http://boxcore.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>数据对象映射模式</title>
    <link href="http://boxcore.github.io/2018/04/04/php/php-design-patterns-data-mapper.html"/>
    <id>http://boxcore.github.io/2018/04/04/php/php-design-patterns-data-mapper.html</id>
    <published>2018-04-03T16:27:57.000Z</published>
    <updated>2018-04-03T16:45:59.118Z</updated>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;数据对象映射模式，是将对象和数据存储映射起来，对一个对象的操作会映射为对数据存储的操作。&lt;/li&gt;
&lt;li&gt;在代码中实现数据对象映射模式，我们将实现一个 ORM 类，将复杂的 SQL 语句映射成对象属性的操作。&lt;/li&gt;
&lt;li&gt;&lt;ol&gt;
&lt;li&gt;结合使用数据对
    
    </summary>
    
      <category term="php" scheme="http://boxcore.github.io/categories/php/"/>
    
    
      <category term="php" scheme="http://boxcore.github.io/tags/php/"/>
    
      <category term="设计模式" scheme="http://boxcore.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>策略模式</title>
    <link href="http://boxcore.github.io/2018/04/04/php/php-design-patterns-strategy.html"/>
    <id>http://boxcore.github.io/2018/04/04/php/php-design-patterns-strategy.html</id>
    <published>2018-04-03T16:27:57.000Z</published>
    <updated>2018-04-03T16:40:13.878Z</updated>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;策略模式，将一组特定的行为和算法封装成类，以适应某些特定的上下文环境，这种模式就是策略模式&lt;/li&gt;
&lt;li&gt;实际应用举例，假如一个电商网站系统，针对男性女性用户要各自跳转到不同的商品类目，并且所有广告位展示不同的广告&lt;/li&gt;
&lt;li&gt;使用策略模式可以实现 I
    
    </summary>
    
      <category term="php" scheme="http://boxcore.github.io/categories/php/"/>
    
    
      <category term="php" scheme="http://boxcore.github.io/tags/php/"/>
    
      <category term="设计模式" scheme="http://boxcore.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>适配器模式</title>
    <link href="http://boxcore.github.io/2018/04/04/php/php-design-patterns-adapter.html"/>
    <id>http://boxcore.github.io/2018/04/04/php/php-design-patterns-adapter.html</id>
    <published>2018-04-03T16:18:25.000Z</published>
    <updated>2018-04-03T16:29:26.640Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;新建一个IDatabase&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div
    
    </summary>
    
      <category term="php" scheme="http://boxcore.github.io/categories/php/"/>
    
    
      <category term="php" scheme="http://boxcore.github.io/tags/php/"/>
    
      <category term="设计模式" scheme="http://boxcore.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>装饰器模式</title>
    <link href="http://boxcore.github.io/2018/04/02/php/php-design-patterns-decorator.html"/>
    <id>http://boxcore.github.io/2018/04/02/php/php-design-patterns-decorator.html</id>
    <published>2018-04-01T17:49:15.000Z</published>
    <updated>2018-04-01T17:56:59.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;定义一个装饰器的接口，声明两个方法，beforXXX() afterXXX(), 然后在类里定义一个方法 addDecorator 添加一个装饰器，保存到一个内部数组，再定义一个beforXXX() afterXXX(); 分别循环每个装饰器，执行装饰器里定义的beforX
    
    </summary>
    
      <category term="php" scheme="http://boxcore.github.io/categories/php/"/>
    
    
      <category term="php" scheme="http://boxcore.github.io/tags/php/"/>
    
      <category term="设计模式" scheme="http://boxcore.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>迭代器模式</title>
    <link href="http://boxcore.github.io/2018/04/02/php/php-design-patterns-iterator.html"/>
    <id>http://boxcore.github.io/2018/04/02/php/php-design-patterns-iterator.html</id>
    <published>2018-04-01T17:05:35.000Z</published>
    <updated>2018-04-01T17:11:44.618Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;迭代器模式&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;迭代器模式，在不需要了解内部实现的前提下，遍历一个聚合对象的内部元素&lt;/li&gt;
&lt;li&gt;相比传统的编程模式，迭代器模式可以隐藏遍历元素所需的操作&lt;/li&gt;
&lt;
    
    </summary>
    
      <category term="php" scheme="http://boxcore.github.io/categories/php/"/>
    
    
      <category term="php" scheme="http://boxcore.github.io/tags/php/"/>
    
      <category term="设计模式" scheme="http://boxcore.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>PHP魔术方法</title>
    <link href="http://boxcore.github.io/2018/04/02/php/php-magic-methods.html"/>
    <id>http://boxcore.github.io/2018/04/02/php/php-magic-methods.html</id>
    <published>2018-04-01T16:53:26.000Z</published>
    <updated>2018-04-01T16:56:50.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;php中的魔术方法有&lt;strong&gt;construct()， &lt;/strong&gt;destruct()， &lt;strong&gt;call()， &lt;/strong&gt;callStatic()， &lt;strong&gt;get()， &lt;/strong&gt;set()， &lt;strong&gt;isset()
    
    </summary>
    
      <category term="php" scheme="http://boxcore.github.io/categories/php/"/>
    
    
      <category term="php" scheme="http://boxcore.github.io/tags/php/"/>
    
      <category term="设计模式" scheme="http://boxcore.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>SPL标准库使用</title>
    <link href="http://boxcore.github.io/2018/04/02/php/php-spl.html"/>
    <id>http://boxcore.github.io/2018/04/02/php/php-spl.html</id>
    <published>2018-04-01T16:02:44.000Z</published>
    <updated>2018-04-01T16:49:22.446Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;SPL库常用四中数据结构&lt;br&gt;栈：(先进后出)&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2
    
    </summary>
    
      <category term="php" scheme="http://boxcore.github.io/categories/php/"/>
    
    
      <category term="php" scheme="http://boxcore.github.io/tags/php/"/>
    
      <category term="设计模式" scheme="http://boxcore.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>《MySQL技术内幕》Note</title>
    <link href="http://boxcore.github.io/2018/03/30/books/mysql%E6%8A%80%E6%9C%AF%E5%86%85%E5%B9%95.html"/>
    <id>http://boxcore.github.io/2018/03/30/books/mysql技术内幕.html</id>
    <published>2018-03-30T02:01:57.000Z</published>
    <updated>2018-03-30T04:13:18.000Z</updated>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;第一本读完的mysql书&lt;/li&gt;
&lt;li&gt;时间&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;阅读前准备&quot;&gt;阅读前准备&lt;/h2&gt;&lt;p&gt;书中的示例一共用到三个数据库文件：一个是 employees 数据库，该数据库是 MySQL 数据库官方提供的示例数据库，主要用来模拟
    
    </summary>
    
      <category term="books" scheme="http://boxcore.github.io/categories/books/"/>
    
    
      <category term="阅读" scheme="http://boxcore.github.io/tags/%E9%98%85%E8%AF%BB/"/>
    
  </entry>
  
  <entry>
    <title>通过teredo获取ipv6地址</title>
    <link href="http://boxcore.github.io/2018/03/07/tools/teredo-ipv6-setting.html"/>
    <id>http://boxcore.github.io/2018/03/07/tools/teredo-ipv6-setting.html</id>
    <published>2018-03-07T13:05:21.000Z</published>
    <updated>2018-03-14T16:44:30.453Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;因为运营商的原因,我们普通民众家里是用不了ipv6的,但是有teredo这个大杀器可以解决这个问题.&lt;/p&gt;
&lt;p&gt;那么,如何开启ipv6呢,下面针对不同的系统提供操作步骤&lt;/p&gt;
&lt;h2 id=&quot;一、window下开启&quot;&gt;一、window下开启&lt;/h2&gt;&lt;p&gt;说明：&lt;br
    
    </summary>
    
      <category term="tools" scheme="http://boxcore.github.io/categories/tools/"/>
    
    
      <category term="ipv6" scheme="http://boxcore.github.io/tags/ipv6/"/>
    
      <category term="teredo" scheme="http://boxcore.github.io/tags/teredo/"/>
    
  </entry>
  
  <entry>
    <title>Mac常用快捷键</title>
    <link href="http://boxcore.github.io/2018/03/06/mac-dev/mac-shortcut-key.html"/>
    <id>http://boxcore.github.io/2018/03/06/mac-dev/mac-shortcut-key.html</id>
    <published>2018-03-06T15:19:32.000Z</published>
    <updated>2018-03-07T02:47:19.182Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;自己常用的mac下快捷键整理,以免遗忘做个备份:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;打开破解软件显示“软件包已损坏”: &lt;code&gt;sudo spctl --master-(disable/enable)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;启动词典默认取词功能快捷键: &lt;code&gt;C
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Awesome Web Toolkit</title>
    <link href="http://boxcore.github.io/2018/03/04/awesome-tools/awesome-web-toolkit.html"/>
    <id>http://boxcore.github.io/2018/03/04/awesome-tools/awesome-web-toolkit.html</id>
    <published>2018-03-04T07:48:39.000Z</published>
    <updated>2018-03-09T15:31:32.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在线工具合集:&lt;/p&gt;
&lt;h2 id=&quot;下载地址转换&quot;&gt;下载地址转换&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://zh.savefrom.net/1-how-to-download-youtube-video.html&quot; target=&quot;_blank&quot; re
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CMD学习笔记</title>
    <link href="http://boxcore.github.io/2018/03/03/windows/windows-cmd-usage.html"/>
    <id>http://boxcore.github.io/2018/03/03/windows/windows-cmd-usage.html</id>
    <published>2018-03-03T00:27:49.000Z</published>
    <updated>2018-03-05T03:02:28.367Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;windows下的cmd我们经常遇到编码问题，如果你是中文的操作系统，他默认的编码是&lt;code&gt;936&lt;/code&gt; 。那么，如何解决命令行的乱码以及编码的问题?这就需要用到命令&lt;code&gt;chcp&lt;/code&gt;了。&lt;/p&gt;
&lt;h2 id=&quot;命令帮助&quot;&gt;命令帮助&lt;/h2&gt;&lt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Linux下VNC服务安装与配置</title>
    <link href="http://boxcore.github.io/2018/03/01/linux/linux-vncserver-usage.html"/>
    <id>http://boxcore.github.io/2018/03/01/linux/linux-vncserver-usage.html</id>
    <published>2018-03-01T09:48:22.000Z</published>
    <updated>2018-03-05T03:02:50.101Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装vnc&quot;&gt;安装vnc&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div
    
    </summary>
    
      <category term="linux" scheme="http://boxcore.github.io/categories/linux/"/>
    
    
      <category term="fastdfs" scheme="http://boxcore.github.io/tags/fastdfs/"/>
    
  </entry>
  
  <entry>
    <title>优秀产品推荐</title>
    <link href="http://boxcore.github.io/2018/02/28/affiliate/index.html"/>
    <id>http://boxcore.github.io/2018/02/28/affiliate/index.html</id>
    <published>2018-02-28T04:17:07.000Z</published>
    <updated>2018-02-28T04:18:51.904Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;交易平台&quot;&gt;交易平台&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://vip.zb.com/activity/joinbtc?tuijianid=36c87688cfcbcb1d34afb17dd197fd27&quot; target=&quot;_blank&quot; rel
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>分布式文件系统FastDFS搭建</title>
    <link href="http://boxcore.github.io/2018/02/13/linux/deploy-fastdfs.html"/>
    <id>http://boxcore.github.io/2018/02/13/linux/deploy-fastdfs.html</id>
    <published>2018-02-13T02:41:23.000Z</published>
    <updated>2018-02-13T02:41:45.236Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="linux" scheme="http://boxcore.github.io/categories/linux/"/>
    
    
      <category term="fastdfs" scheme="http://boxcore.github.io/tags/fastdfs/"/>
    
  </entry>
  
  <entry>
    <title>Awesome Windows</title>
    <link href="http://boxcore.github.io/2018/02/12/awesome-tools/awesome-windows.html"/>
    <id>http://boxcore.github.io/2018/02/12/awesome-tools/awesome-windows.html</id>
    <published>2018-02-12T09:18:48.000Z</published>
    <updated>2018-02-12T09:19:35.052Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;包管理工具&quot;&gt;包管理工具&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://chocolatey.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;chocolatey&lt;/a&gt;: The package manager for W
    
    </summary>
    
      <category term="tools" scheme="http://boxcore.github.io/categories/tools/"/>
    
    
      <category term="mac" scheme="http://boxcore.github.io/tags/mac/"/>
    
  </entry>
  
</feed>
